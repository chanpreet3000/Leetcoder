{
    "problemName": "modify-graph-edge-weights",
    "language": "cpp",
    "code": "class Solution {\npublic:\n    vector <pair<int,int>> adj[200];\n    vector<int>find(int n,int src,int dist)\n    {\n        vector<int>dis(n+1,1e9+10);\n        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>pq;\n        pq.push({0,src});\n        dis[src]=0;\n        vector<int>vis(n+10,0);\n        while(pq.size())\n        {\n            auto [wt,node]=pq.top();\n            pq.pop();\n            if(vis[node])\n            {\n                continue;\n            }\n            vis[node]=1;\n            for(auto &[current_node,current_wt]:adj[node])\n            {\n                if(dis[current_node]>current_wt+wt)\n                {\n                    dis[current_node]=current_wt+wt;\n                    pq.push({dis[current_node],current_node});\n                }\n            }\n        }\n        return dis;\n    }\n\n    vector<vector<int>> modifiedGraphEdges(int n, vector<vector<int>>& v, int src, int dest, int target) {\n        vector <vector <int>> ans;\n        for(int i = 0; i < v.size(); i++)\n        {\n            if(v[i][2] == -1)\n            continue;\n            adj[v[i][0]].push_back({v[i][1],v[i][2]});\n            adj[v[i][1]].push_back({v[i][0],v[i][2]});\n        }\n        vector <int> k = find(n,src,dest);\n        if(k[dest] < target)\n        return {};\n        else if(k[dest] == target)\n        {\n            for(int i = 0; i < v.size(); i++)\n            {\n                if(v[i][2] == -1)\n                v[i][2] = 2e9;\n            }\n            return v;\n        }\n        for(int i = 0; i < v.size(); i++)\n        {\n            if(v[i][2] == -1)\n            {\n                v[i][2] = 1;\n                adj[v[i][0]].push_back({v[i][1],1});\n                adj[v[i][1]].push_back({v[i][0],1});\n                vector <int> k = find(n,src,dest);\n                if(k[dest] <= target)\n                {\n                    v[i][2] += target-k[dest];\n                    for(int j = i+1; j < v.size(); j++)\n                    {\n                        if(v[j][2] == -1)\n                        v[j][2] = 2e9;\n                    }\n                    return v;\n                }\n            }\n        }\n        return {};\n    }\n};"
}