{
    "problemName": "guess-the-word",
    "language": "cpp",
    "code": "/**\n * // This is the Master's API interface.\n * // You should not implement it, or speculate about its implementation\n * class Master {\n *   public:\n *     int guess(string word);\n * };\n */\nclass Solution {\n    int get_matches(const string& s1, const string& s2) {\n        int n = s1.length();\n        int matches = 0;\n        for (int i = 0; i < n; ++i) {\n            if (s1[i] == s2[i]) {\n                ++matches;\n            }\n        }\n        return matches;\n    }\npublic:\n    void findSecretWord(vector<string>& wordlist, Master& master) {\n        \n        int guesses = 0;\n        \n        while (guesses < 10) {\n            int num_words = wordlist.size();\n            int r = rand() % num_words;\n            string word = wordlist[r];\n            \n            int res = master.guess(word);\n            printf(\"%d %s %d\\n\", r, word.c_str(), res);\n            if (res == 6) {\n                break;\n            }\n            \n            swap(wordlist[r], wordlist.back());\n            wordlist.pop_back();\n            auto it = wordlist.begin();\n            while (it != wordlist.end()) {\n                int matches = get_matches(word, *it);\n                if (matches != res) {\n                    swap(*it, wordlist.back());\n                    wordlist.pop_back();\n                } else {\n                    ++it;\n                }\n            }\n            ++guesses;\n        }\n    }\n};"
}