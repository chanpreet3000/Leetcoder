{
    "problemName": "verbal-arithmetic-puzzle",
    "language": "python3",
    "code": "class Solution:\n\tdef isSolvable(self, words: List[str], result: str) -> bool:\n\t\tv = defaultdict(int)\n\t\tresa = set()\n\t\tn = 0\n\t\tfor i in range(len(words)):\n\t\t\tword = words[i]\n\t\t\twords[i] = words[i][::-1]\n\t\t\tl = len(word)\n\t\t\tif l > 1:\n\t\t\t\tresa.add(word[0])\n\t\t\tn = max(n, l)\n\t\t\tfor j in range(l):\n\t\t\t\tv[word[j]] = None\n\t\tresult = result[::-1]\n\t\tfor i in result:\n\t\t\tv[i] = None\n\t\tm, n = len(words), max(n, len(result))\n\t\tgrid = [[0 for i in range(n)] for j in range(m)]\n\t\tfor i in range(m):\n\t\t\tx = len(words[i])\n\t\t\tfor j in range(x):\n\t\t\t\tgrid[i][j] = words[i][j]\n\t\t# for row in grid:\n\t\t#     print(*row)\n\t\t# print(*result)\n\t\tif len(result) > 1:\n\t\t\tresa.add(result[-1])\n\t\tvisited = [False for i in range(10)]\n\t\tdef solve(i, j, res):\n\t\t\tnonlocal resa\n\t\t\tnonlocal visited\n\t\t\tfor z in resa:\n\t\t\t\tif v[z] == 0:\n\t\t\t\t\treturn False\n\t\t\tif j == n:\n\t\t\t\treturn res == 0\n\t\t\tif i == m:\n\t\t\t\tif j < len(result):\n\t\t\t\t\tval = result[j]\n\t\t\t\t\tif v[val] != None:\n\t\t\t\t\t\tif v[val] == res%10:\n\t\t\t\t\t\t\tif solve(0, j+1,res//10):\n\t\t\t\t\t\t\t\treturn True\n\t\t\t\t\t\treturn False\n\t\t\t\t\tfor x in range(10):\n\t\t\t\t\t\tif visited[x]:\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\tvisited[x] = True\n\t\t\t\t\t\tv[val] = x\n\t\t\t\t\t\tif solve(i, j, res):\n\t\t\t\t\t\t\treturn True\n\t\t\t\t\t\tv[val] = None\n\t\t\t\t\t\tvisited[x] = False\n\t\t\t\t\treturn False\n\t\t\t\telse:\n\t\t\t\t\tif res == 0 and solve(0,j+1,res):\n\t\t\t\t\t\treturn True\n\t\t\t\t\treturn False\n\n\t\t\tval = grid[i][j]\n\t\t\tif grid[i][j] == 0:\n\t\t\t\tif solve(i+1, j, res):\n\t\t\t\t\treturn True\n\t\t\t\treturn False\n\t\t\tif v[val] != None:\n\t\t\t\tif solve(i+1, j, res+v[val]):\n\t\t\t\t\treturn True\n\t\t\t\treturn False\n\t\t\tfor x in range(10):\n\t\t\t\tif visited[x]:\n\t\t\t\t\tcontinue\n\t\t\t\tvisited[x] = True\n\t\t\t\tval = grid[i][j]\n\t\t\t\tv[val] = x\n\t\t\t\tif solve(i+1, j, res+x):\n\t\t\t\t\treturn True\n\t\t\t\tv[val] = None\n\t\t\t\tvisited[x] = False\n\t\t\treturn False\n\t\treturn solve(0,0,0)"
}