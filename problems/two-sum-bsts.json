{
    "problemName": "two-sum-bsts",
    "language": "python3",
    "code": "# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def twoSumBSTs(self, root1: Optional[TreeNode], root2: Optional[TreeNode], target: int) -> bool:\n        stack1 = []\n        set1 = set()\n        while stack1 or root1:\n            while root1:\n                stack1.append(root1)\n                root1 = root1.left\n            root1 = stack1.pop()\n            set1.add(target-root1.val)\n            root1 = root1.right\n\n        stack2 = []\n        while stack2 or root2:\n            while root2:\n                stack2.append(root2)\n                root2 = root2.left\n            root2 = stack2.pop()\n            if root2.val in set1:\n                return True\n            root2 = root2.right\n\n        return False"
}