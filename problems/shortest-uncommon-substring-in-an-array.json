{
    "problemName": "shortest-uncommon-substring-in-an-array",
    "language": "cpp",
    "code": "class Solution {\npublic:\n    vector<string> shortestSubstrings(vector<string>& arr) {\n        int n = arr.size();\n        map<string, set<int>> mp;\n        for(int i = 0; i < n; i++){\n            for(int j = 0; j < arr[i].size(); j++){\n                string temp = \"\";\n                for(int k = j; k < arr[i].size(); k ++){\n                    temp.push_back(arr[i][k]);\n                    mp[temp].insert(i);\n                }\n            }\n        }\n        vector<string> res(n);\n        \n        for(int i = 0; i < n; i++){\n            string ans = \"\";\n            int len = INT_MAX;\n            for(int j = 0; j < arr[i].size(); j++){\n                string temp = \"\";\n                for(int k = j; k < arr[i].size(); k ++){\n                    temp.push_back(arr[i][k]);\n                    if(mp[temp].size() == 1){\n                        if(temp.length() < len){\n                            ans = temp;\n                            len = temp.size();\n                        }else if(temp.length() == len){\n                            if(lexicographical_compare(temp.begin(), temp.end(), ans.begin(), ans.end())){\n                                ans = temp;\n                            }\n                        }\n                    }\n                }\n            }\n            res[i] = ans;\n        }\n        return res;\n    }\n};"
}