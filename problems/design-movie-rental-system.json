{
    "problemName": "design-movie-rental-system",
    "language": "cpp",
    "code": "class MovieRentingSystem {\npublic:\n    map<int, set<pair<int, int>>> prices;\n    set<vector<int>> prev;\n    map<pair<int, int>, int> mp;\n    MovieRentingSystem(int n, vector<vector<int>>& entries) {\n        for(auto i : entries){\n            prices[i[1]].insert({i[2], i[0]});\n            mp[{i[0], i[1]}] = i[2];\n        }\n    }\n    \n    vector<int> search(int movie) {\n        vector<int> ans;\n        int ind = 5;\n        for(auto i : prices[movie]){\n            if(ind == 0)break;\n            ind--;\n            ans.push_back(i.second);\n        }\n        return ans;\n    }\n    \n    void rent(int shop, int movie) {\n        int price = mp[{shop, movie}];\n        pair<int, int> p = make_pair(price, shop);\n        prices[movie].erase(p);\n        cout<<price<<\" \"<<shop<<\" \"<<movie<<endl;\n        prev.insert({price, shop, movie});\n    }\n    \n    void drop(int shop, int movie) {\n        int price = mp[{shop, movie}];\n        prices[movie].insert({price, shop});\n        prev.erase({price, shop, movie});\n    }\n    \n    vector<vector<int>> report() {\n        int ind = 5;\n        vector<vector<int>> arr;\n        for(auto i : prev){\n            if(ind == 0)break;\n            ind--;\n            arr.push_back({i[1], i[2]});\n        }\n        return arr;\n    }\n};\n\n/**\n * Your MovieRentingSystem object will be instantiated and called as such:\n * MovieRentingSystem* obj = new MovieRentingSystem(n, entries);\n * vector<int> param_1 = obj->search(movie);\n * obj->rent(shop,movie);\n * obj->drop(shop,movie);\n * vector<vector<int>> param_4 = obj->report();\n */"
}