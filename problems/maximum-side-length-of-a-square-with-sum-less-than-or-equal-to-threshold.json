{
    "problemName": "maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold",
    "language": "python3",
    "code": "class Solution:\n    def maxSideLength(self, mat: List[List[int]], threshold: int) -> int:\n        m, n  = len(mat),len(mat[0])\n        pre = [[0 for i in range(n+1)] for j in range(m+1)]\n        for i in range(1,m+1):\n            for j in range(1,n+1):\n                pre[i][j] = mat[i-1][j-1]+pre[i-1][j]+pre[i][j-1]-pre[i-1][j-1]\n        # for i in pre:\n        #     print(i)\n        def check(k):\n            for i in range(k,m+1):\n                for j in range(k,n+1):\n                    if pre[i][j]-pre[i][j-k]-pre[i-k][j]+pre[i-k][j-k]<=threshold:\n                        return True\n            return False\n        left = 0\n        right = min(m,n)\n        ans = 0\n        while left<=right:\n            mid = (left+right)//2\n            #print(mid)\n            if check(mid):\n                ans = mid\n                left = mid+1\n            else:\n                right =mid-1\n        return ans"
}