{
    "problemName": "alphabet-board-path",
    "language": "python3",
    "code": "class Solution:\n    def alphabetBoardPath(self, target: str) -> str:\n        m = {c: [i // 5, i % 5] for i, c in enumerate(\"abcdefghijklmnopqrstuvwxyz\")}\n        x0, y0 = 0, 0\n        res = []\n        for c in target:\n            x, y = m[c]\n            if y < y0:\n                res.append('L' * (y0 - y))\n            if x < x0:\n                res.append('U' * (x0 - x))\n            if x > x0:\n                res.append('D' * (x - x0))\n            if y > y0:\n                res.append('R' * (y - y0))\n            res.append('!')\n            x0, y0 = x, y\n        return ''.join(res)"
}