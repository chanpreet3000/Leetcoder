{
    "problemName": "find-a-good-subset-of-the-matrix",
    "language": "cpp",
    "code": "class Solution {\npublic:\n    vector<int> goodSubsetofBinaryMatrix(vector<vector<int>>& arr) {\n        int m = arr.size(), n = arr[0].size();\n        for(int i = 0; i < m; i++)if(accumulate(arr[i].begin(), arr[i].end(), 0LL) == 0)return {i};\n        for(int i = 0; i < m; i++){\n            for(int j = i + 1; j < m; j++){\n                int s = 0;\n                for(int k = 0; k < n; k++){\n                    s += (arr[i][k] & arr[j][k]);\n                }\n                // cout<<i<<\" \"<<j<<\" \"<<s<<endl;\n                if(s == 0)return {i, j};\n            }\n        }\n        return {};\n    }\n};"
}