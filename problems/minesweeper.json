{
    "problemName": "minesweeper",
    "language": "java",
    "code": "class Solution {\n    public char[][] updateBoard(char[][] board, int[] click) {\n        helper(board,click[0],click[1]);\n        return board;\n    }\n    private void helper(char[][] board, int rowIdx, int colIdx) {\n        if (rowIdx<0 || colIdx<0 || rowIdx>=board.length || colIdx>=board[0].length) return;\n        if (board[rowIdx][colIdx]=='M') {\n            board[rowIdx][colIdx]='X'; return;\n        }\n        if (board[rowIdx][colIdx]!='E') return;\n        board[rowIdx][colIdx] = 'B';\n        int[][] directions = new int[][]{{-1,-1},{-1,0},{-1,1},{0,-1},{0,1},{1,-1},{1,0},{1,1}};\n        int countMines = 0;\n        for (int k=0; k<directions.length; k++) {\n            int nextRow = rowIdx+directions[k][0];\n            int nextCol = colIdx+directions[k][1];\n            if (nextRow<0 || nextCol<0 || nextRow>=board.length || nextCol>=board[0].length) continue;\n            if (board[nextRow][nextCol]=='M') {\n                countMines++;\n            }\n        }\n        if (countMines>0) {\n            board[rowIdx][colIdx] = (char)(countMines+'0'); return;\n        }\n        for (int k=0; k<directions.length; k++) {\n            int nextRow = rowIdx+directions[k][0];\n            int nextCol = colIdx+directions[k][1];\n            if (nextRow<0 || nextCol<0 || nextRow>=board.length || nextCol>=board[0].length) continue;\n            helper(board,nextRow,nextCol);\n        }\n        \n    }\n}"
}