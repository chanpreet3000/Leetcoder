{
    "problemName": "number-of-distinct-islands-ii",
    "language": "python3",
    "code": "class Solution:\n    def numDistinctIslands2(self, grid: List[List[int]]) -> int:\n        \"\"\"\n        有暴力解吗\n        每个求出来之后 再求出所有变换的样子，再sort，取第一个比较\n        \n        \"\"\"\n        #d = {}\n        rows,cols = len(grid), len(grid[0])\n        count = 1\n        \n        ans = set()\n        \n        def dfs(grid, r, c,path):#, count):\n            rows,cols = len(grid), len(grid[0])\n            if not (0<=r<rows and 0<=c<cols and grid[r][c] == 1):\n                return\n            grid[r][c] = 0\n\n            path.append((r,c))\n            dfs(grid, r+1,c,path)\n            dfs(grid, r-1,c,path)\n            dfs(grid, r,c+1,path)\n            dfs(grid, r,c-1,path)\n            \n            \n        def norm(encode):\n            ans = [[] for _ in range(8)]\n            \n            for pair in encode:\n                x,y = pair\n                ans[0].append([x,y])\n                ans[1].append([x,-y])\n                ans[2].append([-x,y])\n                ans[3].append([-x,-y])\n                ans[4].append([y,x])\n                ans[5].append([y,-x])\n                ans[6].append([-y,x])\n                ans[7].append([-y,-x])\n            for each in ans:\n                each.sort()\n                \n                x0,y0 = each[0]\n                for pair in each:\n                    pair[0]-=x0\n                    pair[1]-=y0\n            ans.sort()\n            return ans[0]\n            \n        for r in range(rows):\n            for c in range(cols):\n                if grid[r][c] == 1:\n                    path = []\n                    dfs(grid, r,c,path)\n                    path = norm(path)\n                    \n                    ans.add(str(path))\n        return len(ans)"
}