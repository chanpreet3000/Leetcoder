{
    "problemName": "grid-game",
    "language": "python3",
    "code": "class Solution:\n    def gridGame(self, grid: List[List[int]]) -> int:\n        # sol: prefix和postfix\n        # n = len(grid[0])\n        # prefixRow1, prefixRow2 = grid[0].copy(), grid[1].copy()\n\n        # for i in range(1, n):\n        #     prefixRow1[i] += prefixRow1[i-1]\n        #     prefixRow2[i] += prefixRow2[i-1]\n        # res = float('inf')\n        # for i in range(n):\n        #     topLeft = prefixRow1[-1] - prefixRow1[i]\n        #     bottomRight = prefixRow2[i - 1] if i > 0 else 0\n        #     robot2 = max(topLeft, bottomRight)\n        #     res = min(res, robot2)\n        # return res\n        n = len(grid[0])\n        # 因为robot2会被robot1优化到min，所以默认初始值无穷大\n        # leftBottom：prefix\n        # rightTop: postfix\n        res = float('inf')\n        leftBottom, rightTop = 0, sum(grid[0])\n        for a, b in zip(grid[0], grid[1]):\n            rightTop -= a\n            res = min(res, max(rightTop, leftBottom))\n            leftBottom += b\n        return res\n        # tc: o(n)\n            # calculate each row's prefix\n        # sc: O(n)\n            # prefix and postfix: 2 lists\n"
}