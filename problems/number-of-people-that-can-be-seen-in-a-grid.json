{
    "problemName": "number-of-people-that-can-be-seen-in-a-grid",
    "language": "python3",
    "code": "class Solution:\n    def seePeople(self, heights: List[List[int]]) -> List[List[int]]:\n        r,c = len(heights), len(heights[0])\n        res = [[0 for i in range(c)] for j in range(r)]\n        \n        for i in range(r):\n            stack = []\n            for j in range(c - 1, -1, -1):\n                equal = False\n                while stack and stack[-1] <= heights[i][j]:\n                    if stack[-1] == heights[i][j]:\n                        equal = True #edge case: [[4,2,1,1,3]]\n                    stack.pop()\n                    res[i][j] += 1\n                if stack and not equal:\n                    res[i][j] += 1\n                stack.append(heights[i][j])\n        for j in range(c):\n            stack = []\n            for i in range(r - 1, -1, -1):\n                equal = False\n                while stack and stack[-1] <= heights[i][j]:\n                    if stack[-1] == heights[i][j]:\n                        equal = True\n                    stack.pop()\n                    res[i][j] += 1\n                if stack and not equal:\n                    res[i][j] += 1\n                stack.append(heights[i][j])\n        return res"
}