{
    "problemName": "convex-polygon",
    "language": "java",
    "code": "class Solution {\n    public boolean isConvex(List<List<Integer>> points) {\n        if (points == null || points.size() == 0 || points.get(0).size() == 0) {\n            return false;\n        }\n\n        boolean negative = false;\n        boolean positive = false;\n        int B;\n        int C;\n        for (int A = 0; A < points.size(); A++) {\n            // Trick to calc the last 3 points: n - 1, 0 and 1.\n            B = (A + 1) % points.size();\n            C = (B + 1) % points.size();\n    \n            int crossProduct =\n                crossProductLength(\n                    points.get(A).get(0), points.get(A).get(1),\n                    points.get(B).get(0), points.get(B).get(1),\n                    points.get(C).get(0), points.get(C).get(1));\n\n            if (crossProduct < 0) {\n                negative = true;\n            } else if (crossProduct > 0) {\n                positive = true;\n            }\n\n            if (negative && positive) {\n                return false;\n            }\n        }\n    \n        // If we got this far, the polygon is convex.\n        return true;\n    }\n    \n    // Return the cross product AB x BC.\n    // The cross product is a vector perpendicular to AB and BC having length |AB| * |BC| * Sin(theta) and\n    // with direction given by the right-hand rule. For two vectors in the X-Y plane, the result is a\n    // vector with X and Y components 0 so the Z component gives the vector's length and direction.\n    private int crossProductLength(int Ax, int Ay, int Bx, int By, int Cx, int Cy)\n    {\n        // Get the vectors' coordinates.\n        int BAx = Ax - Bx;\n        int BAy = Ay - By;\n        int BCx = Cx - Bx;\n        int BCy = Cy - By;\n    \n        // Calculate the Z coordinate of the cross product.\n        return (BAx * BCy - BAy * BCx);\n    }\n}"
}