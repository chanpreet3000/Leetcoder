{
    "problemName": "cherry-pickup",
    "language": "python3",
    "code": "class Solution:\n    def cherryPickup(self, grid: List[List[int]]) -> int:\n        n = len(grid)\n        \n        # Two people independently traverse from (n-1, n-1) to (0, 0)\n        @cache\n        def dp(x1, y1, x2):\n            y2 = x1 + y1 - x2 # two people moving left and up. x1 + y1 == x2 + y2\n            # out of bound or ineligible, return -1\n            if x1 < 0 or y1 < 0 or x2 < 0 or y2 < 0 or grid[x1][y1] == -1 or grid[x2][y2] == -1:\n                return -1\n            \n            # if at 0,0\n            if x1 == 0 and y1 == 0:\n                return grid[0][0]\n            \n            # if not at 0,0.\n            if x1 != x2:\n                ans = grid[x1][y1] + grid[x2][y2]\n            else:\n                ans = grid[x1][y1]\n                \n            tmp = max([dp(x1-1, y1,   x2-1),\n                       dp(x1-1, y1,   x2),\n                       dp(x1,   y1-1, x2),\n                       dp(x1,   y1-1, x2-1)])\n            \n            if tmp >= 0:\n                return ans + tmp\n            else:\n                return -1\n                \n        return max(0, dp(n-1, n-1, n-1))\n        "
}