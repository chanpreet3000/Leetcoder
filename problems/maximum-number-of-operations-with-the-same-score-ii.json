{
    "problemName": "maximum-number-of-operations-with-the-same-score-ii",
    "language": "cpp",
    "code": "int dp[2001][2001];\nclass Solution {\npublic:\n    int helper(vector<int> &nums, int i, int j, int sum){\n        if(j - i + 1 < 2)return 0;\n        if(dp[i][j] != -1)return dp[i][j];\n        int ans = 0;\n        if(nums[i] + nums[i + 1] == sum){\n            ans = max(ans, 1 + helper(nums, i + 2, j, sum));\n        }\n        if(nums[i] + nums[j] == sum){\n            ans = max(ans, 1 + helper(nums, i + 1, j - 1, sum));\n        }\n        if(nums[j] + nums[j - 1] == sum){\n            ans = max(ans, 1 + helper(nums, i, j - 2, sum));\n        }\n        return dp[i][j] = ans;\n    }\n    int maxOperations(vector<int>& nums) {\n        int n = nums.size();\n        memset(dp, -1, sizeof dp);\n        int ans1 = helper(nums, 0, n - 1, nums[0] + nums[1]);\n        memset(dp, -1, sizeof dp);\n        int ans2 = helper(nums, 0, n - 1, nums[0] + nums[n - 1]);\n        memset(dp, -1, sizeof dp);\n        int ans3 = helper(nums, 0, n - 1, nums[n - 1] + nums[n - 2]);\n        return max({ans1, ans2, ans3});\n    }\n};"
}