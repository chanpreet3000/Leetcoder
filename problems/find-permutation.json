{
    "problemName": "find-permutation",
    "language": "python3",
    "code": "class Solution:\n    def findPermutation(self, s: str) -> List[int]:\n        st=[]\n        res = []\n        for i in range(0,len(s)):\n            if(s[i]==\"D\"):\n                st.append(i+1)\n            else:\n                st.append(i+1)\n                while(len(st)>0):\n                    res.append(st.pop())\n        \n        st.append(len(s)+1)\n        while(len(st)>0):\n            res.append(st.pop())\n        \n        return res\n                    \n            \n            \n        \n        \n        \n        \n        \n        # n^2 solution\n        # res=[]\n        # maxIndex = 1\n        # if s[0]==\"I\":\n        #     res=[1,2]\n        # else:\n        #     res=[2,1]\n        #     maxIndex = 0\n        # if(len(s)>1):  \n        #     for i in range(1,len(s[1:])+1):\n        #         if(s[i]==\"I\"):\n        #             res.append(i+2)\n        #             if(res[-1]>res[maxIndex]):\n        #                 maxIndex = len(res)-1\n        #         else:\n        #             l1 = res[0:maxIndex]\n        #             l2= res[maxIndex:]\n        #             l2.insert(0,i+2)\n        #             res = l1+l2\n        #             maxIndex = len(l1)\n        # return res\n                    \n        \n        \n        \n        "
}