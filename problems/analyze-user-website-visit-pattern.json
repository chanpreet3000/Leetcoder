{
    "problemName": "analyze-user-website-visit-pattern",
    "language": "cpp",
    "code": "class Solution {\npublic:\n    vector<string> mostVisitedPattern(vector<string>& username, vector<int>& timestamp, vector<string>& website) {\n        int n = username.size();\n        unordered_map<string, map<int, string>> mp; // name->{time, web}\n        \n        int maxFreq = 0;\n        unordered_map<string, int> freq;\n        \n        for (int i = 0; i < n; i++) {\n            mp[username[i]][timestamp[i]] = website[i];\n        }\n        \n        for (auto element : mp) {\n            map<int, string> userData = element.second;\n            unordered_set<string> st;\n            for (auto i = userData.begin(); i != userData.end(); i++) {\n                for (auto j = next(i); j != userData.end(); j++) {\n                    for (auto k = next(j); k != userData.end(); k++) {\n                        string hashing = i->second + \" \" + j->second + \" \" + k->second;\n                        st.insert(hashing);\n                    }\n                }\n            }\n            for (auto pattern : st) {\n                freq[pattern]++;\n                maxFreq = max(maxFreq, freq[pattern]);\n            }\n        }\n        string res = \"\";\n        for (auto element : freq) {\n            if (element.second == maxFreq) {\n                if (res.size() == 0) res = element.first;\n                else if (element.first < res) res = element.first;\n            }\n        }\n        \n        string token;\n        stringstream ss(res);\n        vector<string> ans;\n        while (getline(ss, token, ' ')) ans.push_back(token);\n        return ans;\n    }\n};"
}