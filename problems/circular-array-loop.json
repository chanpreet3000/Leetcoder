{
    "problemName": "circular-array-loop",
    "language": "cpp",
    "code": "class Solution {\npublic:\n    vector<int> vis;\n    bool circularArrayLoop(vector<int>& nums) {\n        vis= vector<int>(nums.size(), 0);\n        int n = nums.size();\n        for(int i = 0 ; i  <nums.size(); i++){\n            if(!vis[i]){\n                vis[i] = 1;\n                unordered_map<int, int> ma;\n                int cur = i;\n                while(1){\n                    int next  = ((cur + nums[cur]) % n + n) % n;\n                    if(next == cur || nums[next] * nums[cur] < 0)break;\n                    if(ma.count(next))return true;\n                    ma[cur]=next;\n                    cur =next;\n                    vis[next]=true;\n                }\n            }\n        }\n        return false;\n    }\n    bool dfs(int start,vector<int>& nums ){\n        int fast = next(next(start,nums),nums);\n        int slow = start;\n        vis[slow]=1;\n       slow = next(slow,nums);\n      \n        while(fast!= slow){\n           \n            fast = next(next(fast,nums),nums);\n            slow = next(slow,nums);\n            vis[slow]=1;\n        }\n        fast = start;\n        ///cout<<start;\n        while(fast!= slow){\n            fast = next(fast,nums);\n            vis[slow]=1;\n            slow = next(slow,nums);\n             \n        }\n        vis[slow]=1;\n        int now = slow;\n        // cout<<now;\n        vector<int> seq;\n        while(next(slow,nums)!=now){\n            seq.push_back(slow);\n            vis[slow]=1;\n            // cout<<slow<<endl;\n            slow = next(slow,nums);\n            \n        }\n        seq.push_back(slow);\n        // cout<<\"a\";\n        if((int)seq.size()<=1)return false;\n        int po = nums[seq[0]];\n        for(int i = 1 ; i <seq.size();i++){\n            if(po * nums[seq[i]] <0)return false;\n        }\n        return true;\n    }\n    int next(int a, vector<int>& nums){\n        int t = nums[a];\n        // cout<<a<<endl;\n        int n = nums.size();\n        \n        if(a + t < 0){\n            a += n;\n            a+=t%n;\n        }else if(a+t >= n){\n            a=(a+t)%n;\n        }else{\n            a=a+t;\n        }\n        // cout<<a<<endl;\n        return a;\n    }\n};"
}