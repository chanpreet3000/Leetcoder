{
    "problemName": "shortest-common-supersequence",
    "language": "cpp",
    "code": "class Solution {\nprivate:\n    struct StringStruct {\n        int i, j, len;\n    } dp[1001][1001];\n    void buildString(string &build, string &str1, string &str2, int i, int j) {\n        if (i == 0 && j == 0) return;\n        else if (i == 0) { build += string(str2, 0, j); return; } \n        else if (j == 0) { build += string(str1, 0, i); return; }\n        else buildString(build, str1, str2, i - dp[i][j].i, j - dp[i][j].j);\n        if (dp[i][j].i == 0) { build += str2[j - 1]; return; }\n        if (dp[i][j].j == 0) { build += str1[i - 1]; return; }\n        if (str1[i - 1] == str2[j - 1])\n            build += str1[i - 1];\n        else {\n            build += str1[i - 1];\n            build += str2[j - 1];\n        }\n    }\npublic:\n    string shortestCommonSupersequence(string str1, string str2) {\n        for (int i = 0; i <= str1.size(); ++i)\n            for (int j = 0; j <= str2.size(); ++j) {\n                if (i == 0 && j == 0)\n                    dp[i][j].len = dp[i][j].i = dp[i][j].j = 0;\n                else if (i == 0) \n                    dp[i][j].len = j;\n                else if (j == 0) \n                    dp[i][j].len = i;\n                else { // (i > 0 && j > 0) \n                    dp[i][j].i = dp[i][j].j = 1;\n                    dp[i][j].len = dp[i - 1][j - 1].len + (str1[i - 1] == str2[j - 1] ? 1 : 2);\n                    if (dp[i - 1][j].len + 1 < dp[i][j].len) {\n                        dp[i][j].j = 0;\n                        dp[i][j].len = dp[i - 1][j].len + 1;\n                    }\n                    if (dp[i][j - 1].len + 1 < dp[i][j].len) {\n                        dp[i][j].i = 0;\n                        dp[i][j].len = dp[i][j - 1].len + 1;\n                    }\n                }\n            }\n        string ans = \"\";\n        buildString(ans, str1, str2, str1.size(), str2.size());\n        return ans;\n    }\n};"
}