{
    "problemName": "walking-robot-simulation-ii",
    "language": "cpp",
    "code": "// OJ: https://leetcode.com/problems/walking-robot-simulation-ii/\n// Author: github.com/lzl124631x\n// Time: \n//      move: O(W + H)\n//      Robot, getPos, getDir: O(1)\n// Space: O(1)\nclass Robot {\n    int dir = 0, dirs[4][2] = {{1,0},{0,1},{-1,0},{0,-1}}, w, h, perimeter, x = 0, y = 0;\n    string text[4] = {\"East\",\"North\",\"West\",\"South\"};\npublic:\n    Robot(int width, int height) : w(width), h(height), perimeter(2*(w + h - 2)) {}\n    void step(int k) {\n        if (k >= perimeter) {\n            k %= perimeter;\n            if (x == 0 && y == 0 && dir == 0) dir = 3; // Special case: if we are at the beginning (x = 0, y = 0 and facing east), after the round trip, the direction becomes south.\n        }\n        while (k > 0) {\n            auto &[dx, dy] = dirs[dir];\n            int nx = x + dx, ny = y + dy;\n            if (nx < 0 || ny < 0 || nx >= w || ny >= h) {\n                dir = (dir + 1) % 4;\n            } else {\n                x = nx, y = ny;\n                --k;\n            }\n        }\n    }\n    vector<int> getPos() {\n        return {x,y};\n    }\n    string getDir() {\n        return text[dir];\n    }\n};"
}