{
    "problemName": "shortest-way-to-form-string",
    "language": "cpp",
    "code": "class Solution {\npublic:\n    int shortestWay(string source, string target) {\n        \n        unordered_set<char> ss;\n        for (auto c : source) {\n            ss.insert(c);\n        }\n        for (auto c : target) {\n            if (ss.count(c) == 0) {\n                return -1;\n            }\n        }\n        \n        \n        int tgt_oft=0, src_oft=0, prev_tgt_oft=0;\n        int s_len = source.size(), t_len = target.size();\n        \n        int min_out = 0;\n        \n        while (tgt_oft < t_len) {\n            if (source[src_oft] != target[tgt_oft]) {\n                src_oft++;\n                // if (src_oft == s_len) {\n                //     // if (tgt_oft == prev_tgt_oft) return -1;\n                //     min_out++;\n                //     src_oft = 0;\n                // }\n            } else {\n                src_oft++; tgt_oft++;\n                // if (src_oft == s_len) {\n                //     min_out++;\n                //     src_oft = 0;\n                //     prev_tgt_oft = tgt_oft;\n                // }\n            }\n            if (src_oft == s_len) {\n                min_out++;\n                src_oft = 0;\n            }\n            \n            \n        }\n        \n        if (src_oft != s_len && src_oft != 0) min_out++;\n        \n        return min_out;\n        \n    }\n};"
}