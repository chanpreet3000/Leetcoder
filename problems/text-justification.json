{
    "problemName": "text-justification",
    "language": "python3",
    "code": "class Solution:\n\n    \n    def fullJustify(self, words: List[str], maxWidth: int) -> List[str]:\n        \n        # In this first block, the words are split into different sentences\n        # just taking into account the number of characters, not the spaces\n        current_size = 0\n        sentences = [[]]\n        sentence_lengths = [0]\n        \n        \n        for word in words:\n            \n            word_len = len(word)\n        \n            if sentence_lengths[-1] + len(sentences[-1]) + word_len <= maxWidth:\n                sentences[-1].append(word)\n                sentence_lengths[-1] += word_len\n            else:\n                print(sentences[-1])\n                sentences.append([word])\n                sentence_lengths.append(word_len)\n        \n        \n        # In this block, the spaces are added in a equilibrate way\n        for sentence_index, sentence in enumerate(sentences):\n            \n            space_number = maxWidth - sentence_lengths[sentence_index]\n            \n            if len(sentence) > 1 and sentence_index != len(sentences) - 1:\n                spaces_by_hole = space_number // (len(sentence) - 1)\n                spaces_remaining = space_number % (len(sentence) - 1)\n                \n                for word_index in range(len(sentence) - 1):\n                    \n                    if spaces_remaining > 0:\n                        sentence[word_index] += ' '*(spaces_by_hole + 1)\n                        spaces_remaining -= 1\n                    else:\n                        sentence[word_index] += ' '*(spaces_by_hole)\n            \n            else:\n                \n                spaces_remaining = space_number - len(sentence) + 1\n                if len(sentence) > 1:\n                    sentences[sentence_index] = [' '.join(sentence)]\n                sentences[sentence_index][-1] += ' '*spaces_remaining\n\n        \n        # All the lists are joined\n        for sentence_index in range(len(sentences)):\n            sentences[sentence_index] = ''.join(sentences[sentence_index])\n            \n        return sentences"
}