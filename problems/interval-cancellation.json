{
    "problemName": "interval-cancellation",
    "language": "javascript",
    "code": "/**\n * @param {Function} fn\n * @param {Array} args\n * @param {number} t\n * @return {Function}\n */\nvar cancellable = function(fn, args, t) {\n    fn(...args)\nconst result = setInterval(fn, t, ...args)\nreturn ()=> clearInterval(result)\n};\n\n/**\n *  const result = []\n *\n *  const fn = (x) => x * 2\n *  const args = [4], t = 20, cancelT = 110\n *\n *  const start = performance.now()\n *\n *  const log = (...argsArr) => {\n *      const diff = Math.floor(performance.now() - start)\n *      result.push({\"time\": diff, \"returned\": fn(...argsArr)})\n *  }\n *       \n *  const cancel = cancellable(log, args, t);\n *\n *  setTimeout(() => {\n *     cancel()\n *  }, cancelT)\n *   \n *  setTimeout(() => {\n *    console.log(result)  // [\n *                         //      {\"time\":0,\"returned\":8},\n *                         //      {\"time\":20,\"returned\":8},\n *                         //      {\"time\":40,\"returned\":8},           \n *                         //      {\"time\":60,\"returned\":8},\n *                         //      {\"time\":80,\"returned\":8},\n *                         //      {\"time\":100,\"returned\":8}\n *                         //  ]\n *  }, cancelT + t + 15)    \n */"
}