{
    "problemName": "maximum-repeating-substring",
    "language": "cpp",
    "code": "class Solution {\npublic:\n    vector<int> zalgo(string &a, string &b){\n        string t = a + \"$\" + b;\n        vector<int> z(t.size(), 0);\n        int l = 0, r = 0;\n        for(int i = 1; i < t.size(); i++){\n            if(i > r){\n                r = l = i;\n                while(r < t.size() && t[r] == t[r - l])r++;\n                z[i] = r - l;\n                r--;\n            }else{\n                int ind = i - l;\n                if(i + z[ind] <= r){\n                    z[i] = z[ind];\n                }else{\n                    l = i;\n                    while(r < t.size() && t[r] == t[r - l])r++;\n                    z[i] = r - l;\n                    r--;\n                }\n            }\n        }\n        return z;\n    }\n    int maxRepeating(string sequence, string word) {\n        string temp = \"\";\n        while(temp.length() < sequence.length()){\n            temp += word;\n        }\n        cout<<temp<<endl;\n        int ans = 0;\n        vector<int> z = zalgo(temp, sequence);\n        for(int i = temp.length(); i < z.size(); i++){\n            ans = max(ans, z[i]/(int)word.size());\n        }\n        return ans;\n    }\n};"
}