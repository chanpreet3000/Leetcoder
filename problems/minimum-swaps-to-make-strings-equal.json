{
    "problemName": "minimum-swaps-to-make-strings-equal",
    "language": "java",
    "code": "class Solution {\n    public int minimumSwap(String s1, String s2) {\n\n        int [] chr1 = new int[26];\n        int [] chr2 = new int[26];\n\n        for (int i = 0; i < s1.length(); i++) {\n            chr1[s1.charAt(i)-'a']++;\n            chr2[s2.charAt(i)-'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n            if((chr1[i] + chr2[i])%2!=0)return -1;\n        }\n        char [] ss1 = s1.toCharArray();\n        char [] ss2 = s2.toCharArray();\n\n        int count =0;\n        for (int i = 0; i < ss1.length; i++) {\n            if(ss1[i]==ss2[i]){\n                continue;\n            }\n            int j = i+1;\n            while (j< ss1.length && (ss1[i]!=ss1[j] || ss1[j]==ss2[j])){\n                if(ss1[i]==ss1[j] && ss1[j]!=ss2[j])break;\n                j++;\n            }\n            if (j < ss1.length){\n                swap(ss1, ss2, i, j);\n                count++;\n            }else{\n                j = i+1;\n                while (j< ss1.length && (ss2[i]!=ss2[j] || ss1[j]==ss2[j])){\n                    if(ss2[i] == ss2[j] && ss1[j]!=ss2[j]) break;\n                    j++;\n                }\n                if(j < ss1.length) {\n                    swap(ss2, ss1, i, j);\n                    count++;\n                }else {\n                    swap(ss1, ss2, i, i);\n                    count++;\n                    i--;\n                }\n\n            }\n        }\n\n        // System.out.println(Arrays.toString(ss1));\n        // System.out.println(Arrays.toString(ss2));\n        return count;\n    }\n    \n    private void swap(char[] ss1, char[] ss2, int i, int j) {\n        char temp = ss2[i];\n        ss2[i] = ss1[j];\n        ss1[j] = temp;\n    }\n}"
}