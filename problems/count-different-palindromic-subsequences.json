{
    "problemName": "count-different-palindromic-subsequences",
    "language": "cpp",
    "code": "class Solution {\npublic:\n    int countPalindromicSubsequences(string s) {\n        int n = s.length();\n        vector<vector<int>> dp(n,vector<int>(n,0));\n        \n        for(int i=0;i<n;i++){\n            dp[i][i] = 1;\n        }\n        \n        for(int gap = 2;gap<=n;gap++){\n            for(int i=0;i<=n-gap;i++){\n                int j = i+gap-1;\n                \n                if(s[i]==s[j]){\n                    int low = i+1;\n                    int high = j-1;\n                    \n                    while(low<=high && s[low]!=s[i])\n                        low++;\n                    while(low<=high && s[high]!=s[i])\n                        high--;\n                    \n                    if(low>high){\n                        dp[i][j] = 2*dp[i+1][j-1] + 2;\n                    }else if(low==high){\n                        dp[i][j] = 2*dp[i+1][j-1] + 1;\n                    }else{\n                        dp[i][j] = 2*dp[i+1][j-1] - dp[low+1][high-1];\n                    }\n                }else{\n                    dp[i][j] = dp[i+1][j]+dp[i][j-1]-dp[i+1][j-1];\n                }\n                \n                dp[i][j] = (dp[i][j]<0 ? dp[i][j]+1000000007 : dp[i][j]) %1000000007;\n            }\n        }\n        \n        return dp[0][n-1];\n    }\n};"
}