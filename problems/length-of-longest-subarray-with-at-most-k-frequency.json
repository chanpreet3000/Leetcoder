{
    "problemName": "length-of-longest-subarray-with-at-most-k-frequency",
    "language": "cpp",
    "code": "class Solution {\npublic:\n    int maxSubarrayLength(vector<int>& nums, int k) {\n        map<int, int> mp;\n        int ans = 0;\n        int curr = 0;\n        int start = 0;\n        for(int i = 0; i < nums.size();i++){\n            mp[nums[i]]++;\n            curr++;\n            // cout<<mp[nums[i]]<<\" \"<<curr<<endl;\n            while(mp[nums[i]] > k){\n                curr--;\n                mp[nums[start]]--;\n                start++;\n            }\n            ans = max(ans, curr);            \n        }\n        return ans;        \n    }\n};"
}