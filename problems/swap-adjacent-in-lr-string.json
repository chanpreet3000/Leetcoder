{
    "problemName": "swap-adjacent-in-lr-string",
    "language": "cpp",
    "code": "class Solution {\npublic:\n    bool canTransform(string start, string end) {\n        // pointto next non-X chars\n        // and check there postions\n        \n        int cur_start = 0, cur_end = 0;\n        \n        while (true) {\n            // go to next non x\n            while (cur_start < start.length() && start[cur_start] == 'X') {\n                cur_start++;\n            }\n            while (cur_end < end.length() && end[cur_end] == 'X') {\n                cur_end++;\n            }\n            \n            if (cur_start == start.length() && cur_end == end.length()) {\n                return true;\n            }\n            \n            // only one ended or not same charatcer\n            if (cur_start == start.length() || cur_end == end.length() || start[cur_start] != end[cur_end]) {\n                return false;\n            }\n            \n            // both same but check there relative positions\n            if (start[cur_start] == 'L' && cur_end > cur_start) {\n                return false;\n            }\n            \n            if (start[cur_start] == 'R' && cur_end < cur_start) {\n                return false;\n            }\n            cur_start++;\n            cur_end++;\n        }\n        return true;\n    }\n};"
}