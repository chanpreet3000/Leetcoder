{
    "problemName": "distinct-echo-substrings",
    "language": "cpp",
    "code": "class Solution {\npublic:\n    long long mul(long long a,long long b,long long mod){\n        return ((a%mod) * (b%mod) + mod)%mod;\n    }\n    long long mod = 1e9+7;\n    long long p = 31;\n    int distinctEchoSubstrings(string s) {\n        long long n=s.size();\n\n        vector<long long>hash(n,0),ppow(n,0);\n        ppow[0]=1;\n        for(int i=1;i<n;i++)ppow[i]=mul(ppow[i-1],p,mod);\n\n        hash[n-1] = (s[n-1]-'a' + 1);\n        for(int i=n-2;i>=0;i--){\n            hash[i] = mul(hash[i+1], p, mod) + (s[i]-'a' + 1);\n            hash[i] %= mod;\n        }\n\n        int res = 0;\n        map<long long,int>mp;\n        for(int i=0;i<n;i++){\n            for(int j=i;j<n;j++){\n                if((j-i+1)&1)continue;\n                int k = i + (j-i+1)/2;\n\n                long long h1 = gethash(i,k-1,ppow,hash);\n                long long h2 = gethash(k,j,ppow,hash);\n\n                if(!mp[h1] && h1==h2){\n                    res++;\n                    mp[h1]=1;\n                }\n            }\n        }\n        return res;\n\n        // Can also do it with prefix hash like this:\n        //  hash[i] = (hash[i - 1] * BASE + str.charAt(i - 1)) % MOD;\n        // and s[l,r] hash = (hash[r] - hash[l] * pow[r - l] % MOD + MOD) % MOD;\n    }\n    long long gethash(int l,int r, vector<long long>&ppow, vector<long long>&hash){\n        int n=ppow.size();\n        return (hash[l] - (r+1 < n ? mul(hash[r+1], ppow[r-l+1], mod) : 0) + mod) % mod;\n    }\n};"
}