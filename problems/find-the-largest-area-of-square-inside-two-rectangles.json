{
    "problemName": "find-the-largest-area-of-square-inside-two-rectangles",
    "language": "cpp",
    "code": "class Solution {\npublic:\n    long long largestSquareArea(vector<vector<int>>& bottomLeft, vector<vector<int>>& topRight) {\n        long long ans = 0;\n        int n = bottomLeft.size();\n        for(int i = 0; i < n; i++){\n            for(int j = 0; j < n; j++){\n                if(i == j)continue;\n                auto &p1 = bottomLeft[i];\n                auto &p2 = bottomLeft[j];\n                \n                auto &p3 = topRight[i];\n                auto &p4 = topRight[j];\n                if(p1[0] <= p2[0] && p3[0] >= p2[0]){\n                    // cout<<\"YES\"<<endl;\n                    if(p2[1] > p3[1] || p4[1] < p1[1])continue;\n                    long long maxy = max(p1[1], p2[1]);\n                    long long miny = min(p4[1], p3[1]);\n                    \n                    long long minx = min(p3[0], p4[0]);\n                    long long maxx = max(p1[0], p2[0]);\n                    // cout<<maxy<<\" \"<<miny<<\" \"<<maxx<<\" \"<<minx<<endl;\n                    long long t = min((miny - maxy), (minx - maxx));\n                    ans = max(ans,  t * t);                    \n                }\n            }\n        }\n        return ans;\n    }\n};"
}