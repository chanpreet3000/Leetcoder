{
    "problemName": "count-submatrices-with-all-ones",
    "language": "cpp",
    "code": "class Solution {\npublic:\n    int numSubmat(vector<vector<int>>& mat) {\n        int n = mat.size();\n        int m = mat[0].size();\n        vector<vector<int>> pre(n + 1, vector<int>(m + 1, 0));\n        for(int i = 0; i < m; i++){\n            pre[1][i + 1] = mat[0][i] + pre[1][i];\n        }\n        for(int i = 1; i < n; i++){\n            pre[i + 1][1] = mat[i][0] + pre[i][1];\n        }\n        for(int i = 2; i <= n; i++){\n            for(int j = 2; j <= m; j++){\n                pre[i][j] = mat[i - 1][j - 1] + pre[i - 1][j] + pre[i][j-1] - pre[i-1][j-1];\n            }\n        }\n        int ans = 0;\n        for(int i = 1; i <= n; i++){\n            for(int j = 1; j <= m; j++){\n                for(int k = i; k <= n; k++){\n                    for(int l = j; l <= m; l++){\n                        int sum = pre[k][l] - pre[i - 1][l] - pre[k][j - 1] + pre[i - 1][j - 1];\n                        if(sum == (k - i + 1) * (l - j + 1))ans++;\n                    }\n                }\n            }\n        }\n        // for(auto i : pre){\n        //     for(auto j : i){\n        //         cout<<j<<\" \";\n        //     }\n        //     cout<<endl;\n        // }\n        return ans;\n    }\n};"
}