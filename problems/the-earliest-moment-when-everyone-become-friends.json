{
    "problemName": "the-earliest-moment-when-everyone-become-friends",
    "language": "python3",
    "code": "class Solution:\n    def find(self, x, root):\n        if x == root[x]:\n            return x\n        root[x] = self.find(root[x], root)\n        return root[x]\n        \n    def union(self, x, y, root):\n        rootX = self.find(x, root)\n        rootY = self.find(y, root)\n        \n        if rootX == rootY:\n            return False\n        \n        elif rootX!=rootY:\n            root[rootY] = rootX\n            return True\n    \n                        \n    def earliestAcq(self, logs: List[List[int]], n: int) -> int:\n        root = [i for i in range(n)]\n        logs.sort(key = lambda x: x[0])\n        count = n\n        \n        for i in logs:           \n            if self.union(i[1], i[2], root):\n                count -= 1\n            \n            if count == 1:\n                return i[0]\n        \n        return -1\n            \n            \n        \n        "
}