{
    "problemName": "implement-trie-ii-prefix-tree",
    "language": "java",
    "code": "class Trie {\n\n    class TrieNode{\n        TrieNode[] alphabets;\n        boolean isEnd;\n        int wordsEnding;\n        int prefix;\n        public TrieNode()\n        {\n            alphabets = new TrieNode[26];\n            isEnd = false;\n            wordsEnding = 0;\n            prefix =0;\n        }\n    }\n    TrieNode root;\n    public Trie() {\n        root = new TrieNode();\n    }\n    \n    public void insert(String word) {\n        TrieNode curr =root;\n        for( char c : word. toCharArray())\n        {\n            int idx =c-'a';\n\n            if(curr.alphabets[idx]==null)\n               curr.alphabets[idx]=  new TrieNode();\n            curr =curr.alphabets[idx];\n            curr.prefix++;   \n        }\n        curr.wordsEnding++;\n        curr.isEnd  = true; \n    }\n    \n    public int countWordsEqualTo(String word) {\n        TrieNode curr =root;\n        for(char c : word.toCharArray())\n        {\n            int idx =c-'a';\n            if(curr.alphabets[idx]==null)\n            return 0;\n            curr =curr.alphabets[idx];\n        }\n        return curr.wordsEnding;\n    }\n    \n    public int countWordsStartingWith(String prefix) {\n          TrieNode curr =root;\n        for(char c : prefix.toCharArray())\n        {\n            int idx =c-'a';\n            if(curr.alphabets[idx]==null)\n            return 0;\n            curr =curr.alphabets[idx];\n        }\n        return curr.prefix;\n    }\n    \n    public void erase(String word) {\n         TrieNode curr =root;\n        for(char c : word.toCharArray())\n        {\n            int idx =c-'a';\n            curr =curr.alphabets[idx];\n            curr.prefix--;\n        }\n        curr.wordsEnding--;\n        \n    }\n}\n\n/**\n * Your Trie object will be instantiated and called as such:\n * Trie obj = new Trie();\n * obj.insert(word);\n * int param_2 = obj.countWordsEqualTo(word);\n * int param_3 = obj.countWordsStartingWith(prefix);\n * obj.erase(word);\n */"
}