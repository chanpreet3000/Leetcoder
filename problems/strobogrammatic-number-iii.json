{
    "problemName": "strobogrammatic-number-iii",
    "language": "java",
    "code": "class Solution {\n    public final char[][] PAIRS = new char[][]{{'0', '0'}, {'1', '1'}, {'6', '9'}, {'8', '8'}, {'9', '6'}}; \n    public int strobogrammaticInRange(String low, String high) {\n        if (low == null || high == null || low.length() > high.length() || (low.length() == high.length() && low.compareTo(high) > 0)) {\n            return 0;\n        }\n        int cnt = 0;\n\n        for (int len = low.length(); len <= high.length(); len++) {\n            cnt += helper(low, high, new char[len], 0, len - 1);\n        }\n        return cnt;\n    }\n\n    private int helper(String low, String high, char[] str, int left, int right) {\n        if (left > right) {\n            String cur = new String(str);\n            //invalid str\n            if ((cur.length() == low.length() && cur.compareTo(low) < 0) || (cur.length() == high.length() && cur.compareTo(high) > 0)) {\n                return 0;\n            } else {\n                System.out.println(cur);\n                return 1;\n            }\n        }\n\n        int res = 0;\n        for (char[] pair : PAIRS) {\n            str[left] = pair[0];\n            str[right] = pair[1];\n\n            //exclude leading zero\n            if (str.length != 1 && str[0] == '0') {\n                continue;\n            }\n            //avoid put 6 and 9 in the middle\n            if (left == right && (pair[0] == '6' || pair[0] == '9')) {\n                continue;\n            }\n            res += helper(low, high, str, left + 1, right - 1);\n        }\n        return res;\n    }\n}"
}