{
    "problemName": "satisfiability-of-equality-equations",
    "language": "python3",
    "code": "from typing import List\n\n\nclass Solution:\n    def equationsPossible(self, equations: List[str]) -> bool:\n        self.parent = [i for i in range(26)]\n        for eqs in equations:\n            p = eqs[0]\n            q = eqs[3]\n            operation = eqs[1:3]\n            if operation == \"==\":\n                self.union(ord(p) - ord('a'), ord(q) - ord('a'))\n\n        for eqs in equations:\n            p = eqs[0]\n            q = eqs[3]\n            operation = eqs[1:3]\n            if operation == \"!=\":\n                if self.connected(ord(p) - ord('a'), ord(q) - ord('a')):\n                    return False\n        return True\n\n    def union(self, i, j):\n        p1 = self.find_parent(i)\n        p2 = self.find_parent(j)\n        if p1 != p2:\n            self.parent[p1] = p2\n\n    def connected(self, i: int, j: int):\n        p1 = self.find_parent(i)\n        p2 = self.find_parent(j)\n        return p1 == p2\n\n    def find_parent(self, i: int):\n        if self.parent[i] == i:\n            return i\n        elif self.parent[i] != i:\n            self.parent[i] = self.find_parent(self.parent[i])\n        return self.parent[i]\n\n\n"
}