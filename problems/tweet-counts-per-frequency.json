{
    "problemName": "tweet-counts-per-frequency",
    "language": "cpp",
    "code": "class TweetCounts {\npublic:\n    TweetCounts() {\n        \n    }\n    \n    void recordTweet(string tweetName, int time) {\n        map[tweetName].push_back(time);\n    }\n    \n    vector<int> getTweetCountsPerFrequency(string freq, string tweetName, int startTime, int endTime) {\n        vector<int> ans;\n        \n        for (int i=0; i <= (endTime - startTime) / f[freq]; i++)\n            ans.push_back(0);\n        \n        vector<int> hold = map[tweetName];\n        \n        for(int i = 0; i < hold.size(); i++){\n           if (hold[i] >= startTime && hold[i] <= endTime) {\n                int index = (hold[i] - startTime) / f[freq];\n                ans[index]++;\n            }\n        }\n        \n        return ans;\n        \n    }\nprivate:\n    unordered_map<string, vector<int>>map;\n    unordered_map<string, int>f = {{\"minute\", 60}, {\"hour\", 3600}, {\"day\", 86400}};\n};\n\n/**\n * Your TweetCounts object will be instantiated and called as such:\n * TweetCounts* obj = new TweetCounts();\n * obj->recordTweet(tweetName,time);\n * vector<int> param_2 = obj->getTweetCountsPerFrequency(freq,tweetName,startTime,endTime);\n */"
}