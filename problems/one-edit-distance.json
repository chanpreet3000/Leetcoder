{
    "problemName": "one-edit-distance",
    "language": "java",
    "code": "class Solution {\n\n    private boolean hasMultipleFreq(String s){\n        int[]freq=new int[26];\n        for (int i=0; i < s.length(); i++){\n            int offset = s.charAt(i)-'a';\n            freq[offset]++; \n            if (freq[offset] > 1){\n                return true; \n            }\n        }\n        return false;         \n    }\n    \n    private boolean hasOneDiff(String s, String t){\n        int count=0; \n        for (int i=0; i < s.length(); i++){\n            char chs=s.charAt(i); \n            char cht=t.charAt(i); \n            if (chs != cht){\n                count++; \n            }\n            if (count > 1){\n                return false; \n            }\n        }\n        return count == 1;         \n    }\n    \n    public boolean isOneEditDistance(String s, String t) {       \n        if (s.length() < t.length()){\n            return isOneEditDistance(t, s); \n        }\n        if (s.length() == t.length()){\n            if (s.equals(t)){\n                return false;\n            }else{\n                return hasOneDiff(s, t); \n            }\n        }else if (Math.abs(s.length()-t.length()) ==1){\n            int i=0;\n            int j=0;\n            boolean used=false; \n            while(i < s.length() && j < t.length()){\n                if (s.charAt(i) == t.charAt(j)){\n                    i++; \n                    j++; \n                }else{\n                    if (used){\n                        return false; \n                    }\n                    i++;\n                    used=true; \n                }\n            }\n            \n            if (!used && i == s.length()-1){\n                return true; \n            }\n            if (i == s.length() && j==t.length()){\n                return true; \n            }\n            return false; \n        }else{\n            return false; \n        }\n    }\n}"
}