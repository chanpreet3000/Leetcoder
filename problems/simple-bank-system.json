{
    "problemName": "simple-bank-system",
    "language": "golang",
    "code": "type Bank struct {\n    balance []int64\n}\n\n\nfunc Constructor(balance []int64) Bank {\n    return Bank{\n        balance: balance,\n    }\n}\n\n\nfunc (this *Bank) Transfer(account1 int, account2 int, money int64) bool {\n    if account1 > len(this.balance) || account2 > len(this.balance) {\n        return false\n    }\n    if this.balance[account1-1] < money {\n        return false\n    }\n    this.balance[account1-1] -= money\n    this.balance[account2-1] += money\n    return true\n}\n\n\nfunc (this *Bank) Deposit(account int, money int64) bool {\n    if account > len(this.balance) {\n        return false\n    }\n    this.balance[account-1] += money   \n    return true\n}\n\n\nfunc (this *Bank) Withdraw(account int, money int64) bool {\n    if account > len(this.balance) {\n        return false\n    }\n    if this.balance[account-1] < money {\n        return false\n    }\n    this.balance[account-1] -= money\n    return true\n}\n\n\n/**\n * Your Bank object will be instantiated and called as such:\n * obj := Constructor(balance);\n * param_1 := obj.Transfer(account1,account2,money);\n * param_2 := obj.Deposit(account,money);\n * param_3 := obj.Withdraw(account,money);\n */"
}