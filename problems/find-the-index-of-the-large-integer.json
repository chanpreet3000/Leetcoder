{
    "problemName": "find-the-index-of-the-large-integer",
    "language": "java",
    "code": "/**\n * // This is ArrayReader's API interface.\n * // You should not implement it, or speculate about its implementation\n * interface ArrayReader {\n *     // Compares the sum of arr[l..r] with the sum of arr[x..y] \n *     // return 1 if sum(arr[l..r]) > sum(arr[x..y])\n *     // return 0 if sum(arr[l..r]) == sum(arr[x..y])\n *     // return -1 if sum(arr[l..r]) < sum(arr[x..y])\n *     public int compareSub(int l, int r, int x, int y) {}\n *\n *     // Returns the length of the array\n *     public int length() {}\n * }\n */\n\nclass Solution {\n    public int getIndex(ArrayReader reader) {\n        \n        int start = 0;\n        int end = reader.length()-1;\n        while((start + 1) < end){\n            int mid = (end + start) / 2;\n            int midS = end - mid > mid - start ? mid + 1 : mid;\n \n            int result = reader.compareSub(start,mid,midS,end);\n            \n            if(result==1){\n                    \n               end = mid;\n            }\n            else if(result == -1){\n                start = mid;\n            }\n            else if(result ==0){\n                return mid;\n            }\n        }\n        \n        int result = reader.compareSub(start,start,end,end);\n        return result == 1 ? start : end;\n    }  \n}"
}