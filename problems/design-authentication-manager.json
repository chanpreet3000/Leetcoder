{
    "problemName": "design-authentication-manager",
    "language": "java",
    "code": "class AuthenticationManager {\n\n    private int ttl;\n    private Map<String, Integer> map;\n\n    public AuthenticationManager(int timeToLive) {\n        this.ttl = timeToLive;\n        this.map = new HashMap<>();\n    }\n    \n    public void generate(String tokenId, int currentTime) {\n        map.put(tokenId, currentTime + this.ttl);\n    }\n    \n    public void renew(String tokenId, int currentTime) {\n        Integer expirationTime = this.map.getOrDefault(tokenId, null);\n        if (expirationTime == null || expirationTime <= currentTime)\n            return;\n        \n        generate(tokenId, currentTime);\n    }\n    \n    public int countUnexpiredTokens(int currentTime) {\n        int count = 0;\n        for (Map.Entry<String, Integer> entry: this.map.entrySet())\n            if (entry.getValue() > currentTime)\n                count++;\n        \n        return count;\n    }\n}\n\n/**\n * Your AuthenticationManager object will be instantiated and called as such:\n * AuthenticationManager obj = new AuthenticationManager(timeToLive);\n * obj.generate(tokenId,currentTime);\n * obj.renew(tokenId,currentTime);\n * int param_3 = obj.countUnexpiredTokens(currentTime);\n */"
}