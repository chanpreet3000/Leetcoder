{
    "problemName": "plates-between-candles",
    "language": "java",
    "code": "class Solution {\n    public int[] platesBetweenCandles(String s, int[][] queries) {\n        int len = queries.length;\n        \n        int[] ans = new int[len];\n        \n        int[] preSum = new int[s.length()];\n        \n        int count = 0;\n        TreeSet<Integer> set = new TreeSet<>();\n        for(int i=0; i < s.length(); i++) {\n            if(s.charAt(i) == '*') {\n                count++;\n            }else {\n                set.add(i);\n            }\n            preSum[i] = count;\n        }\n        \n        // System.out.println(Arrays.toString(preSum));\n        \n        int index = 0;\n        for(int[] q : queries) {\n            int i = q[0];\n            int j = q[1];\n            \n            if(s.charAt(i) == '|' && s.charAt(j) == '|') {\n                ans[index++] = preSum[j] - preSum[i];\n            }else {\n                Integer findCeiling = set.ceiling(i);\n                Integer findFloor = set.floor(j);\n                // System.out.println(findCeiling + \" \" + findFloor);\n                \n                if(findCeiling != null && findFloor != null && findFloor > findCeiling) {\n                    ans[index++] = preSum[findFloor] - preSum[findCeiling];\n                }else \n                    index++;\n            }\n        }\n        \n        return ans;\n    }\n}"
}