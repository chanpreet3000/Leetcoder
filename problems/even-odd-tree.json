{
    "problemName": "even-odd-tree",
    "language": "python",
    "code": "# Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution(object):\n    def isEvenOddTree(self, root):\n        \"\"\"\n        :type root: TreeNode\n        :rtype: bool\n        \"\"\"\n        queue = deque()\n        queue.append(root)\n        even_idx = True\n        while len(queue):\n            for i in range(len(queue)):\n                node = queue.popleft()\n                if node == '$':\n                    continue\n                if even_idx and node.val%2 == 0:\n                    return False\n                elif not even_idx and node.val%2!= 0:\n                    return False\n                if even_idx:\n                    # strictly decreasing order \n                    if queue and queue[0]!='$' and node.val >= queue[0].val:\n                        return False\n                elif not even_idx:\n                    if queue and queue[0]!='$' and node.val <= queue[0].val:\n                        print('called')\n                        return False\n                if node.left:\n                    queue.append(node.left)\n                if node.right:\n                    queue.append(node.right)\n            if queue:        \n                queue.append('$')\n                    \n            even_idx = not even_idx\n        return True"
}