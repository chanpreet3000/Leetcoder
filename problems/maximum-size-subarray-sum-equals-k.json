{
    "problemName": "maximum-size-subarray-sum-equals-k",
    "language": "java",
    "code": "class Solution {\n  public int maxSubArrayLen(int[] nums, int k) { \n    int max = 0;\n    int sum = 0;\n    Map<Integer, Integer> map = new HashMap();\n    \n    for(int i = 0; i < nums.length; i++) {\n      sum += nums[i];\n      if(sum == k) {\n        max = i + 1;\n      }\n      \n      if(map.containsKey(sum - k)) {\n        max = Math.max(max, i - map.get(sum - k));\n      }\n      \n      if(!map.containsKey(sum)) {\n        map.put(sum, i);\n      }\n    }\n    \n    return max;\n  }\n}\n\n/*\nk = 3\n\n[1,-1,5,-2,3]\n\n[1,0,5,3,6]\n\nsum[j] - sum[i] = k\n\nk + sum[i]\n\n*/"
}