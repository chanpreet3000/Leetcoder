{
    "problemName": "insert-into-a-sorted-circular-linked-list",
    "language": "python3",
    "code": "\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val=None, next=None):\n        self.val = val\n        self.next = next\n\"\"\"\n\nclass Solution:\n    def insert(self, head: 'Optional[Node]', insertVal: int) -> 'Node':\n        node = Node(insertVal)\n        \n        if not head:\n            node.next = node\n            return node\n        \n        if not head.next:\n            head.next = node\n            node.next = head\n            return head\n        \n        prev = head\n        current = head.next\n        idx = 0\n        \n        max_val = float(\"-inf\")\n        max_node = None\n\n        while current != head.next or idx == 0:\n            \n            if prev.val <= insertVal <= current.val:\n                prev.next = node\n                node.next = current\n                return head\n\n            if current.val >= max_val:\n                max_val = current.val\n                max_node = current\n            \n            prev = current\n            current = current.next\n            idx = idx + 1\n        \n        nxt = max_node.next\n        max_node.next = node\n        node.next = nxt\n       \n        return head\n"
}