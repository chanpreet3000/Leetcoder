{
    "problemName": "add-two-numbers-ii",
    "language": "java",
    "code": "/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {\n        Stack<Integer> stack1 = new Stack();\n        Stack<Integer> stack2 = new Stack();\n        while (l1 != null) {\n            stack1.add(l1.val);\n            l1 = l1.next;\n        }\n        while (l2 != null) {\n            stack2.add(l2.val);\n            l2 = l2.next;\n        }\n        ListNode res = new ListNode(0);\n\n        int carry = 0;\n\n        while (!stack1.isEmpty() || !stack2.isEmpty() || carry != 0) {\n            int x = !stack1.isEmpty() ? stack1.pop() : 0;\n            int y = !stack2.isEmpty() ? stack2.pop() : 0;\n            int sum = x + y + carry;\n            res.val = sum % 10;\n            ListNode head = new ListNode(sum / 10);\n            carry = sum / 10;\n            head.next = res;\n            res = head;\n        }\n        \n        return res.val == 0 ? res.next : res;\n    }\n}"
}