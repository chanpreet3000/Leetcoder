{
    "problemName": "maximum-points-in-an-archery-competition",
    "language": "c",
    "code": "\n\n/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\n\n#define MAX_SECTION 11\nint* maximumBobPoints(int numArrows, int* aliceArrows, int aliceArrowsSize, int* returnSize){\n\n\tint i,j,k;\n\tint dp[MAX_SECTION  + 1 ][numArrows+1];\n\tint neededArrow;\n\tint* BosArrorws;\n\n\tfor(i=0;i<numArrows+1;i++){\n\t\tdp[0][i] = 0;\n    }\n\n\tfor(i=1;i<MAX_SECTION  + 1 ;i++){\n\t\tfor(j=0;j<numArrows+1;j++){\n            neededArrow = j - (aliceArrows[i]+1);\n            if(neededArrow < 0){\n                dp[i][j] = dp[i - 1][j];\n            }else if(dp[i-1][j] >=dp[i - 1][neededArrow] + i){\n                dp[i][j] = dp[i - 1][j];\n            }else{\n                dp[i][j] = dp[i - 1][neededArrow] + i;\n            }\n            //printf(\"%d %d %d\\n\",i,j,dp[i][j]);\n\t\t}\n    }\n\t\n    BosArrorws  = malloc(sizeof(int)*(MAX_SECTION  + 1));\n\n    i=MAX_SECTION ;\n    j=numArrows;\n\n    \n    for(i=MAX_SECTION ;i>=1 ;i--){\n        //nowScore = dp[i][j];\n        if(dp[i][j] == dp[i - 1][j]){\n            BosArrorws[i] =0;\n        }else{\n            BosArrorws[i] = aliceArrows[i] + 1;\n            j -= BosArrorws[i];\n        }\n    }\n      BosArrorws[0] = j;  \n     *returnSize = aliceArrowsSize;\n    \n    return BosArrorws;\n}\n"
}