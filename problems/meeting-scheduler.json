{
    "problemName": "meeting-scheduler",
    "language": "cpp",
    "code": "class Solution {\npublic:\n    vector<int> minAvailableDuration(vector<vector<int>>& slots1, vector<vector<int>>& slots2, int duration) {\n        auto cmp = [](auto &lhs, auto&rhs) {\n            return lhs[0] < rhs[0];\n        };\n        sort(slots1.begin(), slots1.end(), cmp);\n        sort(slots2.begin(), slots2.end(), cmp);\n        \n        int s1 = 0, s2 = 0;\n        while (s1 < slots1.size() && s2 < slots2.size()) {\n            if (slots2[s2][1] <= slots1[s1][0]) {\n                s2++;\n                continue;\n            }\n            if (slots2[s2][0] >= slots1[s1][1]) {\n                s1++;\n                continue;\n            }\n            \n            auto & left = slots1[s1][0] < slots2[s2][0] ? slots1[s1] : slots2[s2];\n            auto & right = slots1[s1][0] < slots2[s2][0] ? slots2[s2] :slots1[s1];\n            if (left[1] - right[0] >= duration && \n                right[1] - right[0] >= duration) {\n                return {right[0], right[0]+duration};\n            }\n            \n            if (slots1[s1][1] < slots2[s2][1]) {\n                s1++;\n            } else {\n                s2++;\n            }\n        }\n        return {};\n    }\n};"
}