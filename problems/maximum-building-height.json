{
    "problemName": "maximum-building-height",
    "language": "cpp",
    "code": "class Solution {\npublic:\n    int maxBuilding(int n, vector<vector<int>>& restrictions) {\n        restrictions.push_back({1, 0});\n        sort(restrictions.begin(), restrictions.end());\n        if (restrictions.back()[0] != n) restrictions.push_back({n, n-1});\n        int result = 0;\n        \n        for (int i=restrictions.size()-2; i>=0; i--) {\n            int curr = restrictions[i+1][1] + (restrictions[i+1][0] - restrictions[i][0]);\n            restrictions[i][1] = min(restrictions[i][1], curr);\n        }\n        \n        for (int i=1; i<restrictions.size(); i++) {\n            int curr = restrictions[i-1][1] + (restrictions[i][0] - restrictions[i-1][0]);\n            if (curr > restrictions[i][1]) result = max(result, restrictions[i][1] + (curr - restrictions[i][1])/2);\n            else result = max(result, curr);\n            restrictions[i][1] = min(restrictions[i][1], curr);\n        }\n        \n        //for (auto r : restrictions) cout << r[0] << \" - \" << r[1] << endl;\n        return result;\n    }\n};"
}