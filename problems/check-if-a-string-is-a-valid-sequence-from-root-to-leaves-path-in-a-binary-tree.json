{
    "problemName": "check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",
    "language": "java",
    "code": "/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isValidSequence(TreeNode root, int[] arr) {\n        return findPath(root, arr, 0);\n    }\n    private  boolean findPath(TreeNode root, int[] sequence, int index) {\n    if(root == null || index == sequence.length) return false;\n\n    if(sequence[index] != root.val) return false;\n\n    if(root.left == null && root.right == null && index == sequence.length-1)\n      return true;\n\n    return findPath(root.left, sequence, index + 1) || findPath(root.right, sequence, index + 1);\n  }\n  \n}"
}