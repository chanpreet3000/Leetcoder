{
    "problemName": "first-day-where-you-have-been-in-all-the-rooms",
    "language": "cpp",
    "code": "class Solution {\npublic:\n    // 好理解版\n    int firstDayBeenInAllRooms(vector<int>& nextVisit) {\n        int n = nextVisit.size();\n        // dp[i][0] = 到達 i 基數次需要幾天\n        // dp[i][1] = 到達 i 偶數次需要幾天\n        const long long M = 1e9+7;\n        vector<vector<long long>> dp(n, vector<long long>(2));\n        \n        dp[0][0] = 0;\n        dp[0][1] = 1;\n        \n        for (int i = 1; i < n; i++) {\n            // 要到上一個的偶數次後，下一步就可以到 i\n            dp[i][0] = (dp[i-1][1] + 1) % M;\n            \n            // 需要先到 i 基數次，然後在從 nextVisit[i]（基數） 到 i-1 偶數次\n            // 1. 先到 i 基數次\n            // 2. 走一步到 nextVisit[i]\n            // 3. 從 nextVisit[i](基數次) 走到 dp[i-1] 偶數次\n            // 4. 再走一步到 i\n            dp[i][1] = (dp[i][0] + 1 + (dp[i-1][1] - dp[nextVisit[i]][0] +M) + 1) % M;\n        }\n        \n        return dp[n-1][0];\n    }\n\n    // 優化版，但其實不是很好理解與解釋\n    int firstDayBeenInAllRooms2(vector<int>& nextVisit) {\n        /*\n            Input: nextVisit = [0,1,2,0]\n            Output: 6\n            Explanation:\n            Your room visiting order for each day is: [0,0,1,1,2,2,3,...].\n            Day 6 is the first day where you have been in all the rooms.\n        */\n\n        /*\n            dp[i] = days required to visit ith romm\n\n            // dp[i] + dp[i]  dp[j]\n            // dp[i] + 1 + (dp[i] + dp[j]) + 1\n            // 0->i i->next[i] \n\n        */\n\n        const long long M = 1e9+7;\n        int n = nextVisit.size();\n        vector<long long> dp(n);\n        dp[0] = 0;\n\n        for (int i = 0; i < (n-1); i++) {\n            dp[i+1] = ( dp[i] + 1 + dp[i] - dp[nextVisit[i]] + 1 + M ) % M;\n        }\n\n        return dp[n-1];\n    }\n};\n"
}