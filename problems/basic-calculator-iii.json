{
    "problemName": "basic-calculator-iii",
    "language": "java",
    "code": "class Solution {\n    public int calculate(String s) {\n        Queue<Character> q = new LinkedList<>();\n        for(char c : s.toCharArray()) {\n            if(c != ' ') {\n                q.offer(c);\n            }\n        }\n        \n        return dfs(q);        \n    }\n    \n    private int dfs(Queue<Character> q) {\n        Stack<Integer> stack = new Stack<>();\n        char preSign = '+';\n        int num = 0;\n        while(!q.isEmpty()) {\n            char c = q.poll();\n            if(Character.isDigit(c)) {\n                num = num * 10 + (c - '0');\n            }\n            if(c == '(') {\n                num = dfs(q);\n            }\n            if(!Character.isDigit(c) || q.isEmpty()) {\n                if(preSign == '+') {\n                    stack.push(num);\n                } else if(preSign == '-') {\n                    stack.push(-num);\n                } else if(preSign == '*') {\n                    stack.push(stack.pop() * num);\n                } else if(preSign == '/') {\n                    stack.push(stack.pop() / num);\n                }\n                preSign = c;\n                num = 0;\n            }\n            if(c == ')') break;\n        }\n        \n        int sum = 0;\n        while(!stack.isEmpty()) {\n            sum += stack.pop();\n        }\n        return sum;\n        \n    }\n    \n}"
}