{
    "problemName": "longest-unequal-adjacent-groups-subsequence-i",
    "language": "cpp",
    "code": "class Solution {\npublic:\n    vector<string> helper(vector<string>& words, vector<int>& groups, int prev){\n        vector<string> temp;\n        for(int i = 0;i < words.size(); i++){\n            if(groups[i] != prev){\n                prev = groups[i];\n                temp.push_back(words[i]);\n            }\n        }\n        return temp;\n    }\n    vector<string> getWordsInLongestSubsequence(int n, vector<string>& words, vector<int>& groups) {\n        vector<string> ans1 = helper(words, groups, 1);\n        vector<string> ans2 = helper(words, groups, 0);\n        if(ans1.size() > ans2.size())return ans1;\n        return ans2;\n    }\n};"
}