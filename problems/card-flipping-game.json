{
    "problemName": "card-flipping-game",
    "language": "python3",
    "code": "class Solution:\n    def flipgame(self, fronts: List[int], backs: List[int]) -> int:\n        # res = 2\n        # cur_front = {1: 1, 2: 1, 3: 0,  4: 2 , 7: 1}\n        # 1\n        # front: [1, 2, 4, 4, 7]\n        # back: [1, 3, 4, 1, 3]\n        \n        \n        same = {x for i, x in enumerate(fronts) if x == backs[i]}\n        res = math.inf\n        \n        # [1, 2, 3, 2, 7]\n        # [1, 4, 5, 6, 1]\n        \n        for i in range(len(fronts)):\n            if fronts[i] not in same: res = min(res, fronts[i])\n            if backs[i] not in same: res = min(res, backs[i])\n        \n        return res if res != math.inf else 0\n            \n        \n    "
}