{
    "problemName": "lonely-pixel-ii",
    "language": "python3",
    "code": "class Solution:\n    def findBlackPixel(self, picture: List[List[str]], target: int) -> int:\n        rowcounts = {i: collections.Counter(picture[i]) for i in range(len(picture))}\n        colcounts = collections.defaultdict(collections.Counter)\n        for j in range(len(picture[0])):\n            for i in range(len(picture)):\n                colcounts[j][picture[i][j]] +=1\n\n        def is_lonely(r, c, picture, target, rowcounts, colcounts):\n            if rowcounts[r]['B'] != target or colcounts[c]['B'] != target:\n                return False\n            # current_row = ''.join(picture[r])\n            for i in range(len(picture)):\n                if picture[i][c] == 'B':\n                    # if ''.join(picture[i]) != current_row:\n                    if picture[i] != picture[r]:\n                        return False\n            return True       \n\n        lonely_count = 0\n        for i in range(len(picture)):\n            for j in range(len(picture[0])):\n                lonely_count += 1 if is_lonely(i, j, picture, target, rowcounts, colcounts) else 0\n                # lonely_count += lonely\n        return lonely_count"
}