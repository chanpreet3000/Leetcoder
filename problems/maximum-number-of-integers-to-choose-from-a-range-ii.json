{
    "problemName": "maximum-number-of-integers-to-choose-from-a-range-ii",
    "language": "python3",
    "code": "class Solution:\n    def maxCount(self, banned: List[int], n: int, maxSum: int) -> int:\n        lo,hi = 1, n\n        point = -1\n        banned = list(set(banned))\n        banned.sort()\n        while lo <= hi:\n            mid = (hi + lo) // 2\n            cur_sum = (1 + mid) * mid // 2\n            for b in banned:\n                if b <= mid:\n                    cur_sum -= b\n                else:\n                    break\n            if cur_sum <= maxSum:\n                point = mid\n                lo = mid + 1\n            else:\n                hi = mid - 1\n        banned_number = bisect.bisect_right(banned, point)\n        return point - banned_number\n# class Solution:\n#     def maxCount(self, banned: List[int], n: int, maxSum: int) -> int:\n#         lo, hi = 0, n\n#         while lo < hi: \n#             mid = lo + hi + 1 >> 1\n#             total = mid*(mid+1)//2\n#             for x in banned: \n#                 if x <= mid: total -= x\n#             if total <= maxSum: lo = mid\n#             else: hi = mid-1\n#         print (lo)\n#         return lo - sum(x <= lo for x in banned)\n"
}