{
    "problemName": "construct-the-lexicographically-largest-valid-sequence",
    "language": "cpp",
    "code": "class Solution {\n    // other approach is we will try to put every element at each index sequencilly\npublic:\n    vector<bool>vis;//track which numbers have been placed\n    vector<int>ans;\n    \n    bool fun(int ind){\n       if(ind==ans.size())return true;\n        \n        if(ans[ind]!=0)return fun(ind+1);// if a number is palce then try to put at next ind\n        \n        for(int i=vis.size()-1;i>0;i--){\n            if(vis[i])continue;// if aleardy putted do not put\n            if(i!=1&&(ind+i>=ans.size()||ans[ind+i]))continue;//means if index for second num\n            //is out of bound or a element is present there then continue \n            vis[i]=true;\n            ans[ind]=i;\n            if(i!=1)ans[ind+i]=i;\n            if(fun(ind+1))return true;\n            vis[i]=false;\n            ans[ind]=0;\n            if(i!=1)ans[ind+i]=0;\n        }\n        return false;\n    }\n    vector<int> constructDistancedSequence(int n) {\n        vis.resize(n+1,false);\n        ans.resize(2*n-1,0);\n        \n        fun(0);\n        return ans;\n    }\n};"
}