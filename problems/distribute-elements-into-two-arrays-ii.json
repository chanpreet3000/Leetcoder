{
    "problemName": "distribute-elements-into-two-arrays-ii",
    "language": "cpp",
    "code": "\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double lld;\n\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\ntypedef tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\ntypedef tree<ll, null_type, less_equal<ll>, rb_tree_tag, tree_order_statistics_node_update> ordered_multiset;\n// find_by_order(x) -> element at index x (0 based)\n// order_of_key(x) -> elements strictly less than x.\n\nclass Solution {\npublic:\n    vector<int> resultArray(vector<int>& nums) {\n        vector<int> a, b, c;\n        ordered_multiset m1, m2;\n        a.push_back(nums[0]);\n        b.push_back(nums[1]);\n        m1.insert(nums[0]);\n        m2.insert(nums[1]);\n        \n        for(int i = 2; i < nums.size(); i++){\n            int la = m1.size() - m1.order_of_key(nums[i] + 1);\n            int lb = m2.size() - m2.order_of_key(nums[i] + 1);\n            if(la > lb){\n                a.push_back(nums[i]);\n                m1.insert(nums[i]);\n            }else if(la < lb){\n                b.push_back(nums[i]);\n                m2.insert(nums[i]);\n            }else{\n                if(a.size() <= b.size()){\n                    a.push_back(nums[i]);\n                    m1.insert(nums[i]);\n                }else{\n                    b.push_back(nums[i]);\n                    m2.insert(nums[i]);\n                }\n            }\n        }\n        for(auto i : a)c.push_back(i);\n        for(auto i : b)c.push_back(i);\n        return c;\n    }\n};"
}