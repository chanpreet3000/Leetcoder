{
    "problemName": "minimize-malware-spread",
    "language": "cpp",
    "code": "class Solution {\npublic:\n    unordered_set<int> s;     \n        \n    void dfs(vector<vector<int>>& graph,vector<bool> &vis,int i,bool &flag,int &cnt){\n         \n     //    if(!flag)return ;  \n            \n         vis[i]=true; \n         for(int j=0;j<graph.size();j++){\n             if(graph[i][j] && !vis[j]){\n                  if(s.find(j)!=s.end()){\n                      flag = false;\n                       return ;\n                  }   \n                  cnt++;\n                  dfs(graph,vis,j,flag,cnt);\n                     \n             }    \n         }   \n    }    \n        \n    int minMalwareSpread(vector<vector<int>>& graph, vector<int>& initial) {\n        \n    \n        for(auto i:initial){\n            s.insert(i);    \n        }    \n            \n        int idx = 0 , val = INT_MIN;    \n            \n        for(int i=initial.size()-1;i>=0;i--){ \n             vector<bool> vis(graph.size(),false);   \n             bool flag = true;\n             int cnt = 1;  \n             dfs(graph,vis,initial[i],flag,cnt); \n             if(!flag)cnt = 0;  \n             \n             if(cnt>val){\n                val = cnt;\n                idx = i;\n             }\n             if(cnt==val && initial[i]<initial[idx]){\n                idx=i;\n             }\n        }  \n            \nreturn initial[idx];       \n    }\n};\n \n\n\n\n\n\n\n"
}