{
    "problemName": "iterator-for-combination",
    "language": "cpp",
    "code": "class CombinationIterator {\npublic:\n    string s;\n    int len;\n    vector<string> ans;\n    int ind;\n    void helper(string &s, string &temp, int len, int ind){\n        if(len < 0)return;\n        if(ind == s.length()){\n            if(len == 0){\n                ans.push_back(temp);\n            }\n            return;\n        }\n        \n        temp.push_back(s[ind]);\n        helper(s, temp, len - 1, ind + 1);\n        temp.pop_back();\n        helper(s, temp, len, ind + 1);\n    }\n    CombinationIterator(string characters, int combinationLength) {\n        map<char, int> mp;\n        ind = 0;\n        for(auto i : characters)mp[i]++;\n        for(auto i : mp)s.push_back(i.first);\n        len = combinationLength;\n        string temp = \"\";\n        helper(s, temp, len, 0);\n    }\n    \n    string next() {\n        return ans[ind++];\n    }\n    \n    bool hasNext() {\n        return (ind < ans.size());\n    }\n};\n\n/**\n * Your CombinationIterator object will be instantiated and called as such:\n * CombinationIterator* obj = new CombinationIterator(characters, combinationLength);\n * string param_1 = obj->next();\n * bool param_2 = obj->hasNext();\n */"
}