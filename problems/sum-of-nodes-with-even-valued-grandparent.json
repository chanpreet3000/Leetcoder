{
    "problemName": "sum-of-nodes-with-even-valued-grandparent",
    "language": "cpp",
    "code": "/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int sumEvenGrandparent(TreeNode* root) {\n    \n        if(root==NULL) return 0;\n        \n        map<TreeNode*,bool> m;\n        queue<TreeNode*> q;\n    q.push(root);\n            int sum=0;\n        while(!q.empty())\n        {\n            TreeNode* x=q.front();\n            q.pop();\n           \n            \n                if(x->left)\n                {\n                   if(x->val%2==0) m[x->left]=true;\n                    q.push(x->left);\n                }\n                if(x->right)\n                {\n                    if(x->val%2==0) m[x->right]=true;\n                    q.push(x->right);\n                }\n            \n         if(m[x]==true)\n         {\n            if(x->left) sum+=(x->left->val);\n             if(x->right) sum+=(x->right->val);\n         }\n            \n            \n            \n    }\n        return sum;\n    }\n};"
}