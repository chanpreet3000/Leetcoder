{
    "problemName": "minimum-distance-to-type-a-word-using-two-fingers",
    "language": "cpp",
    "code": "class Solution {\npublic:\n    int dist(int i, int j){\n        pair<int, int> p1 = {i/6, i%6};\n        pair<int, int> p2 = {j/6, j%6};\n        return abs(p1.first - p2.first) + abs(p1.second - p2.second);\n    }\n    int helper(string &word){\n        vector<vector<int>> prev(26, vector<int>(26, 0));\n        vector<vector<int>> curr(26, vector<int>(26, 0));\n        vector<vector<vector<int>>> dp(word.size() + 1, vector<vector<int>> (26, vector<int>(26, 0)));\n        for(int ind = word.size() - 1; ind >= 0; ind--){\n            for(int i = 0; i < 26; i++){\n                for(int j = 0; j < 26; j++){\n                    int ans = 1e9;\n                    int c = word[ind] - 'A';\n                    ans = min(ans, prev[c][j] + dist(i, c));\n                    ans = min(ans, prev[i][c] + dist(j, c));\n                    curr[i][j] = ans;\n                }\n            }\n            prev = curr;\n        }\n        int ans = 1e9;\n        for(int i = 0; i < 26; i++){\n            for(int j = 0; j < 26; j++){\n                ans = min(ans, curr[i][j]);\n            }\n        }\n        return ans;\n    }\n    int minimumDistance(string word) {\n        return helper(word);\n    }\n};"
}