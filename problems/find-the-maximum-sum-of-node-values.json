{
    "problemName": "find-the-maximum-sum-of-node-values",
    "language": "cpp",
    "code": "typedef long long ll;\nclass Solution\n{\npublic:\n    ll maximumValueSum(vector<int> &nums, int k, vector<vector<int>> &edges)\n    {\n        ll n = nums.size();\n        vector<vector<ll>> adj(n);\n        for (auto i : edges)\n        {\n            adj[i[0]].push_back(i[1]);\n            adj[i[1]].push_back(i[0]);\n        }\n        vector<ll> arr;\n        for (ll i = 0; i < n; i++)\n            if (((ll)nums[i] ^ k) > nums[i])\n                arr.push_back(i);\n\n        ll sz = arr.size();\n        ll sum = accumulate(nums.begin(), nums.end(), 0LL);\n        ll _max = sum;\n        for (ll i = 0; i < arr.size(); i++)\n            sum += ((ll)nums[arr[i]] ^ k) - nums[arr[i]];\n        if (sz % 2 == 0)\n            return sum;\n\n        for (ll i = 0; i < sz; i++)\n        {\n            ll _max2 = sum - ((ll)nums[arr[i]] ^ k) + nums[arr[i]];\n            _max = max(_max, _max2);\n        }\n\n        vector<ll> vis(n, 0);\n        for (ll i = 0; i < sz; i++)vis[arr[i]] = 1;\n        for (ll i = 0; i < n; i++)\n        {\n            if (vis[i] == 1)\n                continue;\n            _max = max(_max, (sum - nums[i] + ((ll)nums[i] ^ k)));\n        }\n\n        return _max;\n    }\n};"
}