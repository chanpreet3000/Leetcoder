{
    "problemName": "swap-for-longest-repeated-character-substring",
    "language": "cpp",
    "code": "class Solution {\npublic:\n    int maxRepOpt1(string text) {\n        int res = 0, n = text.size();\n        unordered_map<char, int> charCnt;\n        for (char c : text) ++charCnt[c];\n        for (int i = 0; i < n; ++i) {\n            char cur = text[i];\n            int j = i, cnt = 0, diff = 0;\n            while (j < n && (text[j] == cur || diff == 0) && cnt < charCnt[cur]) {\n                if (cur != text[j]) {\n                    ++diff;\n                    i = j - 1;\n                }\n                ++cnt;\n                ++j;\n            }\n            res = max(res, cnt);\n        }\n        for (int i = n - 1; i >= 0; --i) {\n            char cur = text[i];\n            int j = i, cnt = 0, diff = 0;\n            while (j >= 0 && (text[j] == cur || diff == 0) && cnt < charCnt[cur]) {\n                if (cur != text[j]) {\n                    ++diff;\n                    i = j + 1;\n                }\n                ++cnt;\n                --j;\n            }\n            res = max(res, cnt);\n        }\n        return res;\n    }\n};"
}