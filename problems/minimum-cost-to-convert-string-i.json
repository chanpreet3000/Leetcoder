{
    "problemName": "minimum-cost-to-convert-string-i",
    "language": "cpp",
    "code": "class Solution {\npublic:\n    \n    void shortest_distance(vector<vector<long long int>>&matrix) {\n        long long int n = matrix.size();\n        for (long long int i = 0; i < n; i++) {\n            for (long long int j = 0; j < n; j++) {\n                if (matrix[i][j] == -1) {\n                    matrix[i][j] = 1e18;\n                }\n                if (i == j) matrix[i][j] = 0;\n            }\n        }\n\n        for (long long int k = 0; k < n; k++) {\n            for (long long int i = 0; i < n; i++) {\n                for (long long int j = 0; j < n; j++) {\n                    matrix[i][j] = min(matrix[i][j],\n                                       matrix[i][k] + matrix[k][j]);\n                }\n            }\n        }\n        for (long long int i = 0; i < n; i++) {\n            for (long long int j = 0; j < n; j++) {\n                if (matrix[i][j] == 1e18) {\n                    matrix[i][j] = -1;\n                }\n            }\n        }\n\n    }\n    long long minimumCost(string source, string target, vector<char>& original, vector<char>& changed, vector<int>& cost) {\n        long long int n = cost.size();\n        vector<vector<long long int>>mat(26,vector<long long int>(26, 1e18));\n        \n        for(long long int i = 0;i<n;i++){\n            long long int r = original[i]-'a';\n            long long int c = changed[i]-'a';\n            long long int wt = cost[i];\n            mat[r][c] = min(mat[r][c], wt);\n        }\n        for(int i = 0; i < 26; i++){\n            for(int j = 0; j < 26; j++){\n                if(mat[i][j] == 1e18)mat[i][j] = -1;\n            }\n        }\n        \n        shortest_distance(mat);\n        \n        long long ans = 0;\n        for(long long int i = 0;i<source.size();i++){\n \n                if(mat[source[i]-'a'][target[i]-'a'] == -1)return -1;\n                else ans += mat[source[i]-'a'][target[i]-'a'] ;\n        }\n        \n        return ans;\n    }\n};"
}