{
    "problemName": "find-the-number-of-good-pairs-ii",
    "language": "cpp",
    "code": "const int N = 1e6 + 10;\nbool prime[N];\nclass Solution {\npublic:\n    long long numberOfPairs(vector<int>& nums1, vector<int>& nums2, int k) {\n        map<int, int> mp;\n        for(auto &i: nums2){\n            mp[i * k]++;\n        }\n        long long ans = 0;\n        for(int i = 0; i < nums1.size(); i++){\n            for(int j = 1; j <= sqrt(nums1[i]); j++){\n                if(nums1[i]%j == 0){\n                    long a = j;\n                    long b = nums1[i]/j;\n                    ans += mp[a];\n                    ans += mp[b];\n                    if(a == b)ans -= mp[a];\n                }\n            }\n        }\n        return ans;\n    }\n};"
}