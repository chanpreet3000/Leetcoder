{
    "problemName": "leftmost-column-with-at-least-a-one",
    "language": "cpp",
    "code": "/**\n * // This is the BinaryMatrix's API interface.\n * // You should not implement it, or speculate about its implementation\n * class BinaryMatrix {\n *   public:\n *     int get(int row, int col);\n *     vector<int> dimensions();\n * };\n */\n\nclass Solution {\npublic:\n    void search(int row,int& res,int& c,BinaryMatrix &binaryMatrix){\n        int lo = 0;\n        int hi = c-1;\n        if (res<0){\n            res = c-1;\n        }\n        int mid;\n        while (lo<=hi){\n            mid = (lo+hi)/2;\n            if (binaryMatrix.get(row,mid)==1){\n                res = min(res,mid);\n                hi = mid-1;\n            }else{\n                lo = mid+1;\n            }\n        }\n    }\n    int leftMostColumnWithOne(BinaryMatrix &binaryMatrix) {\n        vector<int> d; \n        d = binaryMatrix.dimensions();\n        int r = d[0];\n        int c = d[1];\n        int res = -1;\n        for (int i=0;i<r;i++){\n            if (binaryMatrix.get(i,c-1)==1){\n                search(i,res,c,binaryMatrix);\n            }\n        }\n        return res;\n    }\n};"
}