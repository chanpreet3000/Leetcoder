{
    "problemName": "powerful-integers",
    "language": "java",
    "code": "class Solution {\n    public List<Integer> powerfulIntegers(int x, int y, int bound) {\n        int a = 1;\n        int tempX = x;\n        while(x != 1 && true) {\n            tempX *= x;\n            if(tempX <= bound) {\n                a += 1;\n            } else {\n                break;\n            }\n        }\n        \n        int b = 1;\n        int tempY = y;\n        while(y != 1 && true) {\n            tempY *= y;\n            if(tempY <= bound) {\n                b += 1;\n            } else {\n                break;\n            }\n        }\n        \n        HashSet<Integer> set = new HashSet<>();\n        for(int i=0; i<=a; i++) {\n            for(int j=0; j<=b; j++) {\n                int temp = (int)Math.pow(x, i) + (int)Math.pow(y, j);\n                if(temp <= bound) {\n                    set.add(temp);\n                } else {\n                    break;\n                }\n            }\n        }\n        \n        List<Integer> list = new ArrayList<>();\n        \n        for(int val : set) {\n            list.add(val);\n        }\n        \n        return list;\n    }\n}"
}