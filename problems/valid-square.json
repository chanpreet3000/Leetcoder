{
    "problemName": "valid-square",
    "language": "cpp",
    "code": "class Solution {\npublic:\n    bool validSquare(vector<int>& p1, vector<int>& p2, vector<int>& p3, vector<int>& p4) {\n        set<int> set({ dist2(p1, p2), dist2(p1, p3), dist2(p1, p4), dist2(p2, p3), dist2(p2, p4), dist2(p3, p4) });\n        if (set.size() != 2 ) return false;\n        \n        vector<int> v;\n        v.insert(v.end(), set.begin(), set.end());\n        \n        return (v[1] == 2 * v[0] || v[0] == 2 * v[1]);\n    }\n    \n    int dist2(vector<int>& p1, vector<int>& p2) {\n        return (p1[0] - p2[0]) * (p1[0] - p2[0]) + (p1[1] - p2[1]) * (p1[1] - p2[1]);\n    }\n};"
}