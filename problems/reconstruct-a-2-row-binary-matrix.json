{
    "problemName": "reconstruct-a-2-row-binary-matrix",
    "language": "python3",
    "code": "class Solution:\n    def reconstructMatrix(self, upper: int, lower: int, colsum: List[int]) -> List[List[int]]:\n\n        cols = len(colsum)\n        twoRow = [[0 for i in range(cols)] for j in range(2)]\n\n        total = sum(colsum)\n        if(total != upper + lower):\n            return []\n        \n        ones = colsum.count(1)\n        twos = colsum.count(2)\n\n        if(twos > upper or twos > lower):\n            return []\n        \n        upper -= twos\n        lower -= twos\n        if(upper + lower != ones):\n            return []\n        oneArray = []\n        for i in range(upper):\n            oneArray.append([1, 0])\n        for i in range(lower):\n            oneArray.append([0, 1])\n        pt = 0\n        for i in range(cols):\n            if(colsum[i] == 0):\n                continue\n            elif(colsum[i] == 2):\n                twoRow[0][i] = 1\n                twoRow[1][i] = 1\n            else:\n                twoRow[0][i] = oneArray[pt][0]\n                twoRow[1][i] = oneArray[pt][1]\n                pt += 1\n\n\n        return twoRow"
}