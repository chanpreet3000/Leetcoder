{
    "problemName": "length-of-the-longest-valid-substring",
    "language": "java",
    "code": "class Solution {\n    public int longestValidSubstring(String word, List<String> forbidden) {\n        Trie root = new Trie();\n        for(String i : forbidden)\n        {\n            Trie node = root;\n            for(char j : i.toCharArray())\n            {\n                if(node.link[j-'a']==null) node.link[j-'a'] = new Trie();\n                node = node.link[j-'a'];\n            }\n            node.word = true;\n        }\n        \n        int ans = 0,i=0,j=0,n = word.length();\n        \n      while(i<n)\n        {\n            // String s = word.substring(j,i+1);\n            // System.out.println(s);\n            boolean is = false;\n            for(int k=Math.max(i-9,j);k<i+1;k++)\n            {\n                Trie node = root;\n                for(int l=k;l<Math.min(l+10,i+1);l++)\n                {\n                    if(node.link[word.charAt(l)-'a']==null)\n                    {\n                        break;\n                    } else {\n                        node = node.link[word.charAt(l)-'a'];\n                    }\n                    if(node.word==true) is = true;\n                }\n            }\n            if(!is){ ans = Math.max(ans,i-j+1);i++; }\n            else j++; \n            // System.out.println(i+\" \"+j);\n        }\n        \n        \n        return ans;\n        \n        \n    }\n}\n\nclass Trie {\n    Trie link[] = new Trie[26];\n    boolean word = false;\n}"
}